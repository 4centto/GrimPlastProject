{"version":3,"sources":["images/icon.png","components/Header.js","config/config.js","components/Formulario.js","components/Lista.js","components/Content.js","components/Loading.js","images/succesimage.png","components/Success.js","images/fatalerror.png","components/Fatal.js","components/Error.js","components/Footer.js","components/Confirm.js","config/Fecha.js","images/headerpdf.jpeg","pages/Home.js","pages/Login.js","components/App.js","index.js"],"names":["Header","className","src","Logo","url","Formulario","handleSubmit","handleAgregar","handleQuitar","cantidad","setCantidad","setProducto","setPrecio","setPzs","setFatal","setLoading","history","useState","productos","setProductos","useEffect","a","Axios","get","data","res","nombre_producto","precioindividual_producto","cantidadporbolsa_producto","console","log","setTimeout","replace","func","onSubmit","autoComplete","name","onChange","e","target","value","i","length","map","type","autoFocus","onClick","Lista","datos","handleEnviar","total","comentarios","setComentarios","val","producto","maxLength","Content","setError","setErrorMSG","lista","setLista","setTotal","precio","pzs","timerError","preventDefault","parseInt","contador","item","push","long","valor","resta","nueva","slice","Loading","Success","Img","Fatal","IMG","width","Error","error","mensaje","style","display","Footer","Confirm","confirm","setConfirm","funcion","visibility","getDay","f","Date","dia","getDate","mes","getMonth","annio","getFullYear","toString","getHours","hora","minutos","getMinutes","Home","props","loading","fatal","success","setSuccess","location","state","correo","nombre","setNombre","errorMSG","cAux","post","n","nombre_cliente","createArray","arreglo","createPDF","doc","jsPDF","addImage","HeadePDF","text","Fecha","autoTable","head","body","foot","margin","top","theme","headStyles","halign","fillColor","minCellHeight","valign","bodyStyles","fontStyle","textColor","footStyles","fontSize","numero","distancia","maxWidth","save","cantidades","fecha","titulo","mensg","Login","registro","setRegistro","login","setLogin","setCorreo","password","setPassword","timerLloading","exec","affectedRows","correo_cliente","password_cliente","cliente_verificado","pathname","search","App","exact","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3deb2c66.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/icon.13f6e339.png\";","import React from 'react'\r\nimport Logo from '../images/icon.png'\r\nimport './styles/Header.css'\r\n\r\nconst Header = () => {\r\n    return (\r\n        <div className='contHeader'>\r\n            <div className=\"header\">\r\n                <img src={Logo} className=\"img\" />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header","const url = \"https://grimplast-native.herokuapp.com/\"\r\n\r\nexport default url","import React, { useEffect, useState } from 'react'\r\n//Extras\r\nimport Axios from 'axios'\r\nimport url from '../config/config'\r\nimport './styles/Formulario.css'\r\n\r\nconst Formulario = ({ handleSubmit, handleAgregar, handleQuitar, cantidad, setCantidad, setProducto, setPrecio, setPzs, setLoading,\r\n                        setFatal, history }) => {\r\n\r\n    const [ productos, setProductos ] = useState([]) //Mostrar los productos en el select\r\n\r\n    useEffect(() => {\r\n\r\n        const func = async () => {\r\n\r\n            try{\r\n\r\n                const res = await (await Axios.get(url + \"get/productos\")).data\r\n                setProductos(res)\r\n\r\n                setProducto(res[0].nombre_producto)\r\n                setPrecio(res[0].precioindividual_producto * res[0].cantidadporbolsa_producto)\r\n                setPzs(res[0].cantidadporbolsa_producto)\r\n\r\n            } catch(err){\r\n                console.log(err)\r\n                setFatal(true)\r\n                setTimeout(() => {\r\n                    setFatal(false)\r\n                    history.replace(\"/\")\r\n                }, 1000)\r\n            }\r\n\r\n        }\r\n\r\n        func()\r\n\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"contFormulario\">\r\n            <form onSubmit={handleSubmit} autoComplete=\"off\" className=\"formulario\">\r\n                <div className=\"inputs\">\r\n                    <select name=\"producto\" onChange={ e => {\r\n                        setProducto(e.target.value)\r\n                        for(let i = 0; i < productos.length; i++){\r\n                            if(productos[i].nombre_producto == e.target.value){\r\n                                setPrecio(productos[i].precioindividual_producto * productos[i].cantidadporbolsa_producto)\r\n                                setPzs(productos[i].cantidadporbolsa_producto)\r\n                            }\r\n                        }\r\n                    }} >\r\n                        {\r\n                            productos.map(value => {\r\n                                return (\r\n                                    <option value={value.nombre_producto}>{value.nombre_producto}</option>\r\n                                )\r\n                            })\r\n                        }\r\n                    </select>\r\n                </div>\r\n                <div className=\"inputs\">\r\n                    <input type=\"number\" autoFocus value={cantidad} onChange={ e => { setCantidad(e.target.value) } } />\r\n                </div>\r\n                <div className=\"inputs\">\r\n                    <input type=\"submit\" value=\"Agregar\" onClick={handleAgregar} />\r\n                </div>\r\n                <div className=\"inputs\">\r\n                    <input type=\"submit\" value=\"Quitar\" onClick={handleQuitar} />\r\n                </div>\r\n            </form>\r\n            <div className=\"contLista\">\r\n                <h2 className=\"listprec\">LISTA DE PRECIOS</h2>\r\n\r\n                <div className=\"lista\">\r\n\r\n                    <table>\r\n                        <tr>\r\n                            <td>PRODUCTO</td>\r\n                            <td>PRECIO x BOLSA</td>\r\n                        </tr>\r\n                        {\r\n                            productos.map(value => {\r\n                                return (\r\n                                    <tr key={value.nombre_producto}>\r\n                                        <td>{value.nombre_producto} ({value.cantidadporbolsa_producto} pzs.)</td>\r\n                                        <td>{(value.precioindividual_producto * value.cantidadporbolsa_producto)}</td>\r\n                                    </tr>\r\n                                )\r\n                            })\r\n                        }\r\n                    </table>\r\n\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Formulario","import React from 'react'\r\nimport './styles/Lista.css'\r\n\r\nconst Lista = ({datos, handleEnviar, total, comentarios, setComentarios}) => {\r\n\r\n    return (\r\n        <div className=\"contListaProductos\">\r\n            <h2>TU LISTA</h2>\r\n            <div className=\"tablaProductos\">\r\n                <table>\r\n                    <tr>\r\n                        <td>Producto</td>\r\n                        <td>Cantidad</td>\r\n                    </tr>\r\n                    {\r\n                        datos.map( val => {\r\n                            return (\r\n                                <tr>\r\n                                    <td>{val.producto}</td>\r\n                                    <td>{val.cantidad}</td>\r\n                                </tr>\r\n                            )\r\n                        } )\r\n                    }\r\n                </table>\r\n            </div>\r\n\r\n            <div className=\"contTotal\">\r\n                <p>TOTAL: $ {total}</p>\r\n            </div>\r\n\r\n            <div className=\"contComentarios\">\r\n                <p>Añadir comentarios: </p>\r\n                <input type=\"text\" value={comentarios} onChange={ e => { setComentarios(e.target.value) }} maxLength=\"200\" />\r\n            </div>\r\n\r\n            <div className=\"contEnviar\">\r\n                <button onClick={handleEnviar}>ENVIAR LISTA</button>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Lista","import React from 'react'\r\n//Componentes\r\nimport Formulario from './Formulario'\r\nimport Lista from './Lista'\r\n//Estilos\r\nimport './styles/Content.css'\r\n\r\nconst Content = ({ handleEnviar, setLoading, setFatal, history, setError, setErrorMSG, lista, setLista, comentarios, setComentarios,\r\n                    total, setTotal, cantidad, setCantidad, producto, setProducto, precio, setPrecio, pzs, setPzs }) => {\r\n\r\n    const timerError = () => {\r\n        setTimeout(() => {\r\n            setError(false)\r\n        }, 1000)\r\n    }\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault()\r\n    }\r\n\r\n    const handleAgregar = () => {\r\n        if(producto){\r\n\r\n            if(cantidad){ //Validar que no este vacio\r\n\r\n                if(parseInt(cantidad) > 0){ //Validar que no sea 0\r\n    \r\n                    var contador = 0\r\n                    \r\n                    const item = {\r\n                        producto,\r\n                        cantidad,\r\n                        precio,\r\n                        pzs\r\n                    }\r\n    \r\n                    \r\n                    for(let i = 0; i < lista.length; i++){\r\n                        if(lista[i].producto == item.producto){\r\n                            contador = contador + 1\r\n                        }\r\n                    }\r\n    \r\n                    if(contador == 0){\r\n                        lista.push(item)\r\n                        setCantidad(\"0\")\r\n                        setTotal(total + (item.precio * item.cantidad))\r\n                    } else {\r\n                        setErrorMSG(\"El Producto ya esta en la lista.\")\r\n                        setError(true)\r\n                        timerError()\r\n                    }\r\n    \r\n                } else {\r\n                    setErrorMSG(\"Debe haber al menos 1 de cantidad.\")\r\n                    setError(true)\r\n                    timerError()\r\n                }\r\n    \r\n            } else {\r\n                setErrorMSG(\"Debe haber al menos 1 de cantidad.\")\r\n                setError(true)\r\n                timerError()\r\n            }\r\n\r\n        } else {\r\n            setErrorMSG(\"Debes seleccionar un producto.\")\r\n            setError(true)\r\n            timerError()\r\n        }\r\n    }\r\n\r\n    const handleQuitar = () => {\r\n        if(lista.length !== 0){\r\n\r\n            const long = lista.length\r\n            const valor = lista[long - 1]\r\n            const resta = valor.cantidad * valor.precio\r\n            const nueva = lista.slice(0, long - 1)\r\n            \r\n            setLista(nueva)\r\n            setTotal(total - resta)\r\n\r\n        } else {\r\n            setErrorMSG(\"La lista esta vacia.\")\r\n            setError(true)\r\n            timerError()\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"contContent\">\r\n            <div className=\"content\">\r\n\r\n                <h2> REALIZA TU PEDIDO </h2>\r\n\r\n                <div className=\"contenedor\">\r\n\r\n                    <Formulario\r\n                        handleSubmit={handleSubmit}\r\n                        handleAgregar={handleAgregar}\r\n                        handleQuitar={handleQuitar}\r\n                        cantidad={cantidad}\r\n                        setCantidad={setCantidad}\r\n                        setProducto={setProducto}\r\n                        setPrecio={setPrecio}\r\n                        setPzs={setPzs}\r\n                        setLoading={setLoading}\r\n                        setFatal={setFatal}\r\n                        history={history}\r\n                    />\r\n\r\n                    <Lista\r\n                        datos={lista}\r\n                        handleEnviar={handleEnviar}\r\n                        total={total}\r\n                        setTotal={setTotal}\r\n                        comentarios ={comentarios}\r\n                        setComentarios={setComentarios}\r\n                    />\r\n\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Content","import React from 'react'\r\nimport './styles/Loading.css'\r\n\r\nconst Loading = () => {\r\n    return (\r\n        <div className=\"lds-roller\"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div>\r\n    )\r\n}\r\n\r\nexport default Loading","export default __webpack_public_path__ + \"static/media/succesimage.60ec4d80.png\";","import React from 'react'\r\nimport './styles/Success.css'\r\nimport Img from '../images/succesimage.png'\r\n\r\nconst Success = () => {\r\n    return (\r\n        <div className=\"contSuccess\">\r\n            <img src={Img} className=\"imgSuccess\" />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Success","export default __webpack_public_path__ + \"static/media/fatalerror.068cfda4.png\";","import React from 'react'\r\nimport './styles/Fatal.css'\r\nimport IMG from '../images/fatalerror.png'\r\n\r\nconst Fatal = () => {\r\n    return (\r\n        <div className=\"contFatal\">\r\n            <img src={IMG} width=\"200\" />\r\n            <h2>OCURRIO UN ERROR DE CONEXION</h2>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Fatal","import React from 'react'\r\nimport './styles/Error.css'\r\n\r\nconst Error = ({error, mensaje}) => {\r\n    return (\r\n        <div className=\"contError\" style={ error ? { display: \"block\" } : { display: \"none\" } }>\r\n            <p>{mensaje}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Error","import React from 'react'\r\nimport './styles/Footer.css'\r\n\r\nconst  Footer = () => {\r\n    return (\r\n        <div className=\"contFooter\">\r\n            <p>Copyrigth © 2021 - GrimPlast</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer","import React from 'react'\r\nimport './styles/Confirm.css'\r\n\r\nconst Confirm = ({ confirm, setConfirm, funcion }) => {\r\n    return (\r\n        <div className=\"contConfirm\" style={ confirm ? { visibility: \"visible\" } : { visibility: \"hidden\" } }>\r\n            <div className=\"confirm\">\r\n                <p>¿Estas seguro que quieres enviar tu lista?</p>\r\n                <div className=\"confirmBotones\">\r\n                    <button\r\n                        onClick={funcion}\r\n                    >SI</button>\r\n                    <button\r\n                        onClick={ () => {\r\n                            setConfirm(!confirm)\r\n                        } }\r\n                    >NO</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Confirm","function getDay(){\r\n    var f = new Date()\r\n    var dia = f.getDate()\r\n    var mes = (f.getMonth() + 1)\r\n    var annio = f.getFullYear()\r\n    var fecha = \"\"\r\n\r\n    if(mes.toString().length == 1){\r\n        fecha = dia + \"/0\" + mes + \"/\" + annio\r\n    } else {\r\n        fecha = dia + \"/\" + mes + \"/\" + annio\r\n    }\r\n\r\n    return fecha\r\n}\r\n\r\nfunction getHours(){\r\n    var f = new Date()\r\n    var hora = f.getHours()\r\n    var minutos = f.getMinutes()\r\n    var tiempo = \"\"\r\n\r\n    if(minutos.toString().length == 1){\r\n        tiempo = hora + \":0\" + minutos\r\n    } else {\r\n        tiempo = hora + \":\" + minutos\r\n    }\r\n\r\n    return tiempo\r\n}\r\n\r\nexport {\r\n    getDay,\r\n    getHours\r\n}","export default __webpack_public_path__ + \"static/media/headerpdf.bbcbde76.jpeg\";","import React, { useEffect, useState } from 'react'\r\n//Componentes\r\nimport Header from '../components/Header'\r\nimport Content from '../components/Content'\r\nimport Loading from '../components/Loading'\r\nimport Success from '../components/Success'\r\nimport Fatal from '../components/Fatal'\r\nimport Error from '../components/Error'\r\nimport Footer from '../components/Footer'\r\nimport Confirm from '../components/Confirm'\r\n//Estilos\r\nimport '../components/styles/Home.css'\r\n//Extras\r\nimport Axios from 'axios'\r\nimport url from '../config/config'\r\nimport { jsPDF } from 'jspdf'\r\nimport autoTable from 'jspdf-autotable'\r\nimport * as Fecha from '../config/Fecha'\r\nimport HeadePDF from '../images/headerpdf.jpeg'\r\n\r\nconst Home = (props) => {\r\n\r\n    const [ loading, setLoading ] = useState(false)\r\n    const [ fatal, setFatal ] = useState(false)\r\n    const [ success, setSuccess ] = useState(false)\r\n    const [ correo, setCorreo ] = useState(props.location.state.correo)\r\n    const [ nombre, setNombre ] = useState(\"\")\r\n    const [ error, setError ] = useState(false)\r\n    const [ errorMSG, setErrorMSG ] = useState(\"\")\r\n    const [ confirm, setConfirm ] = useState(false)\r\n    const [ lista, setLista ] = useState([])\r\n    const [ comentarios, setComentarios ] = useState(\"\")\r\n    const [ total, setTotal ] = useState(0)\r\n    const [ cantidad, setCantidad ] = useState(\"0\")\r\n    const [ producto, setProducto ] = useState(\"\")\r\n    const [ precio, setPrecio ] = useState(0)\r\n    const [ pzs, setPzs ] = useState(0)\r\n\r\n    const timerError = () => {\r\n        setTimeout(() => {\r\n            setError(false)\r\n        }, 1000)\r\n    }\r\n\r\n    useEffect(() => {\r\n        \r\n        const func = async () => {\r\n            setLoading(true)\r\n            try{\r\n\r\n                const cAux = props.location.state.correo\r\n\r\n                const n = await (await Axios.post(url + \"get/cliente/registro/correo\", { correo: cAux })).data\r\n    \r\n                if(n.length > 0){\r\n    \r\n                    setNombre(n[0].nombre_cliente)\r\n                    setLoading(false)\r\n    \r\n                } else {\r\n                    setLoading(false)\r\n                    setErrorMSG(\"El usuario no existe.\")\r\n                    setError(true)\r\n                    timerError()\r\n                    props.history.push(\"/\")\r\n                }\r\n    \r\n            } catch(err){\r\n                console.log(err)\r\n                setLoading(false)\r\n                setFatal(true)\r\n                setTimeout(() => {\r\n                    setFatal(false)\r\n                    props.history.replace(\"/\")\r\n                }, 1000)\r\n            }\r\n        }\r\n\r\n        func()\r\n\r\n    }, [])\r\n\r\n    const showConfirmDialog = () => {\r\n        setConfirm(!confirm)\r\n    }\r\n\r\n    const createArray = () => {\r\n        var arreglo = []\r\n        for(let i = 0; i < lista.length; i++){\r\n            arreglo.push([ i + 1, lista[i].producto, lista[i].cantidad, lista[i].precio, lista[i].pzs ])\r\n        }\r\n        return arreglo\r\n    }\r\n\r\n    const distancia = () => {\r\n        var numero = 50\r\n        for(let i = 0; i < lista.length; i++){\r\n            numero += 10\r\n        }\r\n\r\n        return numero\r\n    }\r\n\r\n    const createPDF = () => {\r\n\r\n        var doc = new jsPDF()\r\n        doc.addImage(HeadePDF, \"JPEG\", 0, 0, 210, 15)\r\n        doc.text(Fecha.getDay() + \"  |  \" + Fecha.getHours(), 150, 25)\r\n        doc.text(nombre + \"  |  \" + correo, 15, 35)\r\n        autoTable(doc, {\r\n            head: [[\"ID\", \"Producto\", \"Cantidad\", \"Precio\", \"Pzs/Bolsa\"]],\r\n            body: createArray(),\r\n            foot: [[\"\", \"\", \"\", \"Total: \", total]],\r\n            margin: {\r\n                top: 37\r\n            },\r\n            theme: \"grid\",\r\n            headStyles: {\r\n                halign: \"center\",\r\n                fillColor: \"#000000\",\r\n                minCellHeight: 10,\r\n                valign: \"middle\"\r\n            },\r\n            bodyStyles: {\r\n                fontStyle: \"bold\",\r\n                fillColor: \"#F4F4F4\",\r\n                textColor: \"#000000\",\r\n                minCellHeight: 10,\r\n                valign: \"middle\"\r\n            },\r\n            footStyles: {\r\n                fontStyle: \"bold\",\r\n                fontSize: 18,\r\n                fillColor: \"#000000\",\r\n                textColor: \"#ffffff\",\r\n                halign: \"center\",\r\n                minCellHeight: 10,\r\n                valign: \"middle\"\r\n            }\r\n        })\r\n        doc.text('\"' + comentarios + '\"', 15, distancia() + 15, { maxWidth: 180 })\r\n        doc.save(\"GrimPlast_\" + Fecha.getDay())\r\n        \r\n\r\n    }\r\n\r\n    const handleEnviar = () => {\r\n\r\n        const func = async () => {\r\n            setLoading(true)\r\n\r\n            const f = new Date()\r\n\r\n            var productos = \"\"\r\n            var cantidades = \"\"\r\n            const fecha = Fecha.getDay()\r\n            const hora = Fecha.getHours()\r\n\r\n            for(let i = 0; i < lista.length; i++){\r\n                if(productos){\r\n                    productos += \"@\" + lista[i].producto\r\n                    cantidades += \"@\" + lista[i].cantidad\r\n                } else {\r\n                    productos += lista[i].producto\r\n                    cantidades += lista[i].cantidad\r\n                }\r\n            }\r\n\r\n            try{\r\n\r\n                if(!comentarios){\r\n                    setComentarios(\"No hay comentarios\")\r\n                }\r\n\r\n                const titulo = \"NUEVO PEDIDO\"\r\n                const mensg = nombre + \" ha registrado un nuevo pedido. Para ver mas detalles consulta los aprtados de tu aplicación.\"\r\n\r\n                const res = await Axios.post(url + \"insert/apartado\", { correo: correo, productos: productos, cantidades: cantidades,\r\n                                                                        total: total, fecha: fecha, hora: hora, nombre: nombre, comentarios})\r\n                const mensaje = await Axios.post(url + \"send/mail\", { titulo, mensaje: mensg})\r\n\r\n                if(res && mensaje){\r\n                    setLoading(false)\r\n                    setSuccess(true)\r\n                    createPDF()\r\n                    setTimeout(() => {\r\n                        setLista([])\r\n                        setProducto(\"\")\r\n                        setCantidad(\"0\")\r\n                        setComentarios(\"\")\r\n                        setPrecio(0)\r\n                        setTotal(0)\r\n                        setPzs(0)\r\n                        setSuccess(false)\r\n                    }, 2000)\r\n                }\r\n\r\n            } catch(err){\r\n                console.log(err)\r\n                setLoading(false)\r\n                setFatal(true)\r\n                setTimeout(() => {\r\n                    setFatal(false)\r\n                    props.history.replace(\"/\")\r\n                }, 1000)\r\n            }\r\n\r\n        }\r\n\r\n        if(lista.length !== 0){\r\n            setConfirm(!confirm)\r\n            func()\r\n        } else {\r\n            setConfirm(!confirm)\r\n            setErrorMSG(\"La lista esta vacia.\")\r\n            setError(true)\r\n            timerError()\r\n        }\r\n\r\n    }\r\n\r\n    if(fatal)\r\n        return <Fatal />\r\n\r\n    if(loading)\r\n        return <Loading />\r\n\r\n    if(success)\r\n        return <Success />\r\n\r\n    return (\r\n        <div className=\"cont-main\">\r\n\r\n            <div className=\"main\">\r\n\r\n                <Confirm\r\n                    confirm={confirm}\r\n                    setConfirm={setConfirm}\r\n                    funcion={handleEnviar}\r\n                />\r\n\r\n                <Error\r\n                    error={error}\r\n                    mensaje={errorMSG}\r\n                />\r\n\r\n                <Header />\r\n\r\n                <Content\r\n                    handleEnviar={showConfirmDialog}\r\n                    setLoading={setLoading}\r\n                    setFatal={setFatal}\r\n                    history={props.history}\r\n                    setError={setError}\r\n                    setErrorMSG={setErrorMSG}\r\n                    lista={lista}\r\n                    setLista={setLista}\r\n                    comentarios={comentarios}\r\n                    setComentarios={setComentarios}\r\n                    total={total}\r\n                    setTotal={setTotal}\r\n                    cantidad={cantidad}\r\n                    setCantidad={setCantidad}\r\n                    producto={producto}\r\n                    setProducto={setProducto}\r\n                    precio={precio}\r\n                    setPrecio={setPrecio}\r\n                    pzs={pzs}\r\n                    setPzs={setPzs}\r\n                />\r\n            </div>\r\n            <div className=\"cont-footer\">\r\n                <Footer />\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home","import React, { useEffect, useState } from 'react'\r\nimport Axios from 'axios'\r\nimport '../components/styles/Login.css'\r\nimport Loading from '../components/Loading'\r\nimport Success from '../components/Success'\r\nimport Fatal from '../components/Fatal'\r\nimport Error from '../components/Error'\r\nimport url from '../config/config'\r\n\r\nconst Login = ({history}) => {\r\n\r\n    const [ registro, setRegistro ] = useState(false)\r\n    const [ login, setLogin ] = useState(true)\r\n    const [ nombre, setNombre ] = useState(\"\")\r\n    const [ correo, setCorreo ] = useState(\"\")\r\n    const [ password, setPassword ] = useState(\"\")\r\n    const [ loading, setLoading ] = useState(false)\r\n    const [ success, setSuccess ] = useState(false)\r\n    const [ fatal, setFatal ] = useState(false)\r\n    const [ error, setError ] = useState(false)\r\n    const [ errorMSG, setErrorMSG ] = useState(\"\")\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault()\r\n    }\r\n\r\n    const timerLloading = () => {\r\n        setTimeout(() => {\r\n            setLoading(false)\r\n        }, 1000)\r\n    }\r\n\r\n    const timerError = () => {\r\n        setTimeout(() => {\r\n            setError(false)\r\n        }, 2000)\r\n    }\r\n\r\n    const handleRegistrarse = () => {\r\n        setLoading(true)\r\n        setRegistro(true)\r\n        setLogin(false)\r\n        setCorreo(\"\")\r\n        setPassword(\"\")\r\n        timerLloading()\r\n    }\r\n\r\n    const handleCerrar = () => {\r\n        setLoading(true)\r\n        setRegistro(false)\r\n        setLogin(true)\r\n        setCorreo(\"\")\r\n        setPassword(\"\")\r\n        setNombre(\"\")\r\n        timerLloading()\r\n    }\r\n\r\n    const registrando = () => {\r\n        if(nombre && correo && password){\r\n\r\n            const re = /[a-zA-Z0-9]+@[a-zA-z0-9]+\\.[a-zA-Z0-9]+/g\r\n            const result = re.exec(correo)\r\n\r\n            if(result !== null){\r\n\r\n                setLoading(true)\r\n\r\n                const func = async () => {\r\n\r\n                    try{\r\n\r\n                        const valNombre = await (await Axios.post(url + \"get/cliente/registro/nombre\", { nombre })).data\r\n\r\n                        if(valNombre.length > 0){\r\n                            setErrorMSG(\"El nombre ingresado ya esta en uso.\")\r\n                            setError(true)\r\n                            timerError()\r\n                            return;\r\n                        } else {\r\n\r\n                            const valCorreo = await (await Axios.post(url + \"get/cliente/registro/correo\", { correo })).data\r\n\r\n                            if(valCorreo.length > 0){\r\n                                setErrorMSG(\"El correo ingresado ya esta en uso.\")\r\n                                setError(true)\r\n                                timerError()\r\n                                return;\r\n                            } else {\r\n\r\n                                const titulo = \"PETICION DE REGISTRO\"\r\n                                const mensg = nombre + \" quiere registrarse en el sistema. Para confirmarlo revisa tu lista de espera de clientes en la APP.\"\r\n\r\n                                const res = await Axios.post(url + \"insert/cliente\", { nombre, correo, password })\r\n                                const sendMail = await Axios.post(url + \"send/mail\", { titulo, mensaje: mensg})\r\n\r\n                                if(res.data.affectedRows == 1){\r\n\r\n                                    setLoading(false)\r\n                                    setSuccess(true)\r\n                                    setTimeout(() => {\r\n                                        setNombre(\"\")\r\n                                        setSuccess(false)\r\n                                        setLogin(true)\r\n                                        setRegistro(false)\r\n                                    }, 1000)\r\n\r\n                                } else {\r\n                                    setErrorMSG(\"NO SE PUDO REGISTRAR AL CLIENTE.\")\r\n                                    setError(true)\r\n                                    timerError()\r\n                                }\r\n\r\n                            }\r\n\r\n                        }\r\n\r\n                    } catch(err){\r\n                        console.log(err)\r\n                        setLoading(false)\r\n                        setFatal(true)\r\n                        setTimeout(() => {\r\n                            setRegistro(false)\r\n                            setLogin(true)\r\n                            setCorreo(\"\")\r\n                            setNombre(\"\")\r\n                            setPassword(\"\")\r\n                            setFatal(false)\r\n                        }, 1000)\r\n                    }\r\n\r\n                }\r\n\r\n                setTimeout(() => {\r\n                    func() \r\n                    setLoading(false)\r\n                }, 500)\r\n\r\n            } else {\r\n                setErrorMSG(\"Correo invalido.\")\r\n                setError(true)\r\n                timerError()\r\n            }\r\n\r\n        } else {\r\n            setErrorMSG(\"Debes llenar todos los campos\")\r\n            setError(true)\r\n            timerError()\r\n        }\r\n    }\r\n\r\n    const logeando = () => {\r\n        if(correo && password){\r\n\r\n            const func = async () => {\r\n                setLoading(true)\r\n                try{\r\n\r\n                    const res = await (await Axios.post(url + \"get/cliente/registro/correo\", { correo })).data\r\n\r\n                    if(res.length > 0){\r\n\r\n                        if(res[0].correo_cliente == correo){\r\n\r\n                            if(res[0].password_cliente == password){\r\n                                \r\n                                if(res[0].cliente_verificado == \"true\"){\r\n                                    setTimeout(() => {\r\n                                        setLoading(false)\r\n                                        history.replace({\r\n                                            pathname: \"/Home\",\r\n                                            search: \"\",\r\n                                            state: {\r\n                                                correo\r\n                                            }\r\n                                        })\r\n                                    }, 1000)\r\n                                } else {\r\n                                    setLoading(false)\r\n                                    setErrorMSG(\"Espera hasta que el administrador te conceda el acceso.\")\r\n                                    setError(true)\r\n                                    timerError()\r\n                                }\r\n\r\n                            } else {\r\n                                setLoading(false)\r\n                                setErrorMSG(\"Contraseña incorrecta.\")\r\n                                setError(true)\r\n                                timerError()\r\n                            }\r\n\r\n                        } else {\r\n                            setLoading(false)\r\n                            setErrorMSG(\"Correo incorrecto.\")\r\n                            setError(true)\r\n                            timerError()\r\n                        }\r\n\r\n                    } else {\r\n                        setLoading(false)\r\n                        setErrorMSG(\"LA CUENTA NO EXISTE\")\r\n                        setError(true)\r\n                        timerError()\r\n                    }\r\n\r\n                } catch(err){\r\n                    console.log(err)\r\n                    setLoading(false)\r\n                    setFatal(true)\r\n                    setTimeout(() => {\r\n                        setCorreo(\"\")\r\n                        setNombre(\"\")\r\n                        setPassword(\"\")\r\n                        setFatal(false)\r\n                    }, 1000)\r\n                }\r\n            }\r\n\r\n            func()\r\n\r\n        } else {\r\n            setErrorMSG(\"DEBES COMPLETAR TODOS LOS CAMPOS\")\r\n            setError(true)\r\n            timerError()\r\n        }\r\n    }\r\n\r\n    if(fatal)\r\n        return <Fatal />\r\n\r\n    if(success)\r\n        return <Success />\r\n\r\n    if(loading)\r\n        return <Loading />\r\n\r\n    return (\r\n        <div className=\"conthome\">\r\n            <Error\r\n                error={error}\r\n                mensaje={errorMSG}\r\n            />\r\n            <div className=\"contRegistro\" style={ registro ? { display: \"contents\" } : { display: \"none\" } } onSubmit={handleSubmit}>\r\n                <form autoComplete=\"off\">\r\n                    <div className=\"inputRegistro\">\r\n                        <p>Nombre de la marca:</p>\r\n                        <input type=\"text\" autoFocus value={nombre} onChange={ e => { setNombre( e.target.value ) } } maxLength=\"15\" />\r\n                    </div>\r\n                    <div className=\"inputRegistro\">\r\n                        <p>Correo:</p>\r\n                        <input type=\"text\" value={ correo } onChange={ e => { setCorreo( e.target.value ) } } />\r\n                    </div>\r\n                    <div className=\"inputRegistro\">\r\n                        <p>Contraseña:</p>\r\n                        <input type=\"text\" value={ password } onChange={ e => { setPassword( e.target.value ) } } />\r\n                    </div>\r\n                    <div className=\"inputRegistro\">\r\n                        <button onClick={ handleCerrar }>CERRAR</button>\r\n                        <button onClick={ registrando }>REGISTRARSE</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n            <div className=\"contLogin\" style={ login ? { display: \"contents\" } : { display: \"none\" } } onSubmit={handleSubmit}>\r\n                <form autoComplete=\"off\">\r\n                    <div className=\"inputRegistro\">\r\n                        <p>Correo:</p>\r\n                        <input type=\"text\" value={ correo } onChange={ e => { setCorreo( e.target.value ) } } />\r\n                    </div>\r\n                    <div className=\"inputRegistro\">\r\n                        <p>Contraseña:</p>\r\n                        <input type=\"password\" value={ password } onChange={ e => { setPassword( e.target.value ) } } />\r\n                    </div>\r\n                    <div className=\"inputRegistro\">\r\n                        <button onClick={ handleRegistrarse }>REGISTRARSE</button>\r\n                        <button onClick={logeando}>INICIAR SESION</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login","import React from 'react'\nimport { BrowserRouter, Route, Switch } from 'react-router-dom'\nimport Home from '../pages/Home'\nimport Login from '../pages/Login'\n\nconst App = () => {\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route exact path=\"/\" component={Login} />\n        <Route exact path=\"/Home\" component={Home} />\n        <Route component={Login} />\n      </Switch>\n    </BrowserRouter>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);"],"sourceRoot":""}